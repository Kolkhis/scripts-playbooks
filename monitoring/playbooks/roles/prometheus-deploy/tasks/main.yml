---
# tasks file for prometheus-deploy
- name: User account setup, download, extraction, and directory creation
  become: true
  block:

    - name: Create a user account for Prometheus
      ansible.builtin.user:
        name: prometheus
        shell: /sbin/nologin

    - name: Create the /var/lib/prometheus directory
      ansible.builtin.file:
        path: /var/lib/prometheus
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'

    - name: Download Prometheus tarball
      ansible.builtin.get_url:
        url: "{{ prometheus_download_link }}"
        dest: "{{ prometheus_tarball }}"
        mode: '0755'

    - name: Extract the Prometheus tarball
      ansible.builtin.unarchive:
        remote_src: true
        src: "{{ prometheus_tarball }}"
        dest: /var/lib/prometheus
        extra_opts: ['--strip-components=1']

    - name: Copy Prometheus binary to /usr/bin
      ansible.builtin.copy:
        remote_src: true
        src: /var/lib/prometheus/prometheus
        dest: /usr/bin/prometheus
        mode: '0755'

    - name: Create the /etc/prometheus directory for configuration
      ansible.builtin.file:
        path: /etc/prometheus
        state: directory
        mode: '0755'

- name: Deploy default configuration file prometheus.yml
  become: true
  block:

    - name: Check for an existing prometheus.yml
      ansible.builtin.stat:
        path: /etc/prometheus/prometheus.yml
      register: prometheus_stat

    - name: Handle existing prometheus.yml
      ansible.builtin.copy:
        remote_src: true
        src: /etc/prometheus/prometheus.yml
        dest: /etc/prometheus/old_prometheus.yml
        mode: '0755'
      when: prometheus_stat.stat.exists

    - name: Deploy prometheus.yml into /etc/prometheus with file-based service discovery
      ansible.builtin.copy:
        dest: /etc/prometheus/prometheus.yml
        content: |
          # /etc/prometheus/prometheus.yml
          global:
            scrape_interval: 15s # Default is every 1 minute.
            evaluation_interval: 15s # Default is every 1 minute.
            # scrape_timeout global default (10s).
          alerting:
            alertmanagers:
              - static_configs:
                  - targets:
                    # - alertmanager:9093
          rule_files:
            # - "first_rules.yml"
          scrape_configs:
            - job_name: "prometheus"
              static_configs:
                - targets: ["localhost:9090"]
              # metrics_path defaults to '/metrics'
              # scheme defaults to 'http'.
            - job_name: 'Prometheus_node'
              static_configs:
                - targets:
                    - 'localhost:9100'
            - job_name: 'node'
              file_sd_configs:
                - files:
                    - '/etc/prometheus/targets.json'
        mode: '0755'

- name: Configuration of prometheus targets
  become: true
  block:

    - name: Check if targets.json exists
      ansible.builtin.stat:
        path: /etc/prometheus/targets.json
      register: targets_file

    - name: Create targets.json if it doesn't exist
      ansible.builtin.copy:
        dest: /etc/prometheus/targets.json
        content: |
          [
              {
                "targets": ["localhost:9100"],
                  "labels": {
                      "job": "node",
                      "team": "infra",
                      "hostname": "{{ ansible_hostname }}"
                  }
              }
          ]
        mode: '0755'
        force: false
      when: not targets_file.stat.exists


- name: Create and satisfy a default service unit file in /etc/systemd/system
  become: true
  block:

    - name: Deploy prometheus.service into /etc/systemd/system
      ansible.builtin.copy:
        dest: /etc/systemd/system/prometheus.service
        content: |
          # /etc/systemd/system/prometheus.service
          [Unit]
          Description=Prometheus
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/bin/prometheus \
           --config.file /etc/prometheus/prometheus.yml \
           --storage.tsdb.path /var/lib/prometheus/ \
           --web.console.templates=/var/lib/prometheus/consoles \
           --web.console.libraries=/var/lib/prometheus/console_libraries

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Create the /var/lib/prometheus/consoles directory to satisfy default ExecStart
      ansible.builtin.file:
        path: /var/lib/prometheus/consoles
        state: directory
        mode: '0755'

    - name: Create the /var/lib/prometheus/console_libraries directory to satisfy default ExecStart
      ansible.builtin.file:
        path: /var/lib/prometheus/console_libraries
        state: directory
        mode: '0755'


- name: Save the prometheus host machine's network IP to facts
  ansible.builtin.set_fact:
    prometheus_host_ip: "{{ ansible_default_ipv4.address }}"

- name: Enable Prometheus systemd service and check firewalld
  become: true
  block:

    - name: Check and register firewalld status
      ansible.builtin.systemd:
        name: firewalld
      register: firewalld_systemd_status

    - name: Set firewalld status as a fact
      ansible.builtin.set_fact:
        firewalld_active: "{{ firewalld_systemd_status.status['ActiveState'] == 'active' }}"

    - name: Debug the state of firewalld
      ansible.builtin.debug:
        msg:
          - "Firewalld_active: {{ firewalld_active }}"

    - name: Expose port 9090 if firewalld is active
      ansible.builtin.shell:
        cmd: |
          firewall-cmd --add-port=9090/tcp --permanent
          firewall-cmd --reload
      when: firewalld_active

    - name: Start Prometheus
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        name: prometheus.service
        state: started
        enabled: true

- name: Output link to the Web UI query page
  ansible.builtin.debug:
    msg: "Prometheus Query Link: http://{{ ansible_default_ipv4.address }}:9090"

