- name: Install and configure node_exporter
  hosts: none rn
  vars: 
    node_exporter_version: 1.8.2
    node_exporter_platform: "linux-amd64"  # TODO: Port code to work with this variable
    node_exporter_dir: "/opt/node_exporter"
    node_exporter_tarball: "node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    node_exporter_extracted_dir: "{{ node_exporter_dir }}/node_exporter-{{ node_exporter_version }}.linux-amd64"
  tasks:

    - name: Creation, download, and extraction of node_exporter
      block:
        - name: Create /opt/node_exporter directory
          become: yes
          ansible.builtin.file:
            path: "{{ node_exporter_dir }}"
            state: directory
            mode: '0755'

        - name: Create /etc/sysconfig directory
          become: yes
          ansible.builtin.file:
            path: /etc/sysconfig
            state: directory
            mode: '0755'

        - name: Download the given version of node_exporter
          become: yes
          ansible.builtin.get_url:
            url: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
            dest: "{{ node_exporter_dir }}"
          
        - name: Extract node exporter
          become: yes
          ansible.builtin.unarchive:
            src: "{{ node_exporter_dir }}/{{ node_exporter_tarball }}"
            dest: "{{ node_exporter_dir }}"

        # TODO: Move to get_url and unarchive modules

    # - name: Download and extract latest version of node_exporter 
    #   become: yes
    #   ansible.builtin.shell:
    #     cmd: |
    #       curl -sLo {{ node_exporter_dir }}/{{ node_exporter_tarball }} https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
    #       tar -xzf {{ node_exporter_dir }}/{{ node_exporter_tarball }} -C {{ node_exporter_dir }}

    - name: Clone and copy configuration files
      block:
        - name: Clone the node_exporter configuration files repo 
          ansible.builtin.git:
            repo: "https://github.com/prometheus/node_exporter.git"
            dest: "{{ node_exporter_dir }}/config_files"

          # TODO: Do we need sysconfig? no.
        - name: Copy the node_exporter unit files into systemd directory
          become: yes
          ansible.builtin.copy:
            remote_src: true
            src: "{{ node_exporter_extracted_dir }}/config_files/examples/systemd/{{ item }}"
            dest: "/etc/systemd/system/{{ item }}"
          loop: 
            - "node_exporter.socket"
            - "node_exporter.service"

        - name: Copy the node_exporter binary to /usr/sbin
          become: yes
          ansible.builtin.copy:
            remote_src: true
            src: "{{ node_exporter_extracted_dir }}/node_exporter"
            dest: /usr/sbin/node_exporter


            ###############################
    - name: Create /var/lib/node_exporter/textfile_collector
      become: yes
      ansible.builtin.file:
        path: /var/lib/node_exporter/textfile_collector
        state: directory
        mode: '0755'

        # Create a user account for node_exporter
    - name: Create a user account for node_exporter
      ansible.builtin.user:
        name: node_exporter
        shell: /sbin/nologin

    - name: Give ownership of node_exporter directories to the node_exporter user account and group
      become: yes
      ansible.builtin.file:
        owner: node_exporter
        group: node_exporter
        path: "{{ item }}"
      loop:
        - /var/lib/node_exporter/textfile_collector
        # - /etc/sysconfig/node_exporter

    # TODO(firewall): Check if firewalld is running, open port 9100 if it is.  

    - name: Reload daemons and start node_exporter
      become: yes
      ansible.builtin.systemd:
        name: node_exporter.service
        state: started
        enabled: true
        daemon_reload: true

    - name: Save remote machine's IP to variable
      ansible.builtin.shell:
        cmd: "hostname -I | awk '{print $1}'"
      register: node_exporter_ip

    - name: Save remote machine's IP to facts
      ansible.builtin.set_fact:
        node_exporter_target: "{{ node_exporter_ip.stdout | trim }}:9100"

    - name: TEST - Output the node's IP
      ansible.builtin.debug:
        msg: "http://{{ node_exporter_target }}:9100/metrics"

# PLAY 2: Configuring Prometheus to scrape the new target(s)
# - name: Add node_exporter targets to Prometheus
#   hosts: localhost
#   vars:
#     node_exporter_target: hostvars['']['node_exporter_target']
#   tasks:

#     - name: Gather the node_exporter_targets
#       ansible.builtin.set_fact:
#         node_exporter_targets: >-
#           {{
#             ansible_play_hosts_all | map('extract', hostvars, 'node_exporter_target') | list
#           }}

#     - name: Debug collected targets
#       ansible.builtin.debug:
#         msg: "{{ node_exporter_targets }}"


