---
- name: Generate and send drift report to webhook
  hosts: servers
  vars:
    baseline_file: /var/tmp/baseline.yaml
  tasks:
    - name: Gather the same info as in baseline
      block:
        - name: Gather stats of critical system files
          ansible.builtin.stat:
            path: "{{ item }}"
            checksum_algorithm: sha256
          loop:
            - /etc/passwd
            - /etc/ssh/sshd_config
            - /etc/hosts
            - /etc/group
          register: file_stats

        - name: Set checksums into facts
          ansible.builtin.set_fact:
            file_checksums: |
              {% for item in file_stats.results %}
              {{ item.stat.path }}: {{ item.stat.checksum }}
              {% endfor %}

        - name: Check active services
          ansible.builtin.shell:
            cmd: "systemctl is-active {{ item }}"
          with_items:
            - sshd
            - firewalld
          register: services_status
          failed_when: false  # returns nonzero if service is inactive

        - name: Set and format the service states
          ansible.builtin.set_fact:
            service_states: |
              {% for item in services_status.results %}
              {{ item.item }}: {{ item.stdout if item.rc == 0 else 'inactive or errored' }}
              {% endfor %}

        - name: Get a list of installed packages with rpm
          ansible.builtin.shell:
            cmd: "rpm -qa --qf '%{NAME}%{VERSION}\n'" # Strip the unnecessary info
          register: installed_packages
          when: ansible_os_family == 'RedHat'

        - name: Get a list of installed packages with dpkg
          ansible.builtin.shell:
            cmd: "dpkg-query --show -f='${Package}${Version}\n'" # Strip the unnecessary info
          register: installed_packages
          when: ansible_os_family == 'Debian'

        - name: Save machine's report to a yaml file
          ansible.builtin.copy:
            dest: /var/tmp/remote_config_report.yaml
            content: |
              files:
              {% for file in file_checksums.split('\n') %}
                {{ file }}
              {% endfor %}

              services:
              {% for service in service_states.split('\n') %}
                {{ service }}
              {% endfor %}

              installed_packages:
              {% for package in installed_packages.stdout.split('\n') %}
                - {{ package }}
              {% endfor %}
            mode: '0755'

        - name: Read in report as a yaml file
          ansible.builtin.slurp:
            src: /var/tmp/remote_config_report.yaml
          register: remote_report_contents_raw

    - name: Check differences between the new report and the baseline
      delegate_to: localhost
      block:
        - name: Read in the baseline yaml file
          ansible.builtin.slurp:
            src: /var/tmp/baseline.yaml
          register: baseline_file_contents_raw

        - name: Parse contents of baseline report
          ansible.builtin.set_fact:
            baseline_report: "{{ baseline_file_contents_raw.content | b64decode | from_yaml }}"

        # - name: Read in the newly generated report
        #   ansible.builtin.slurp:
        #     src: /var/tmp/remote_config_report.yaml
        #   register: remote_report_contents_raw

        - name: Parse contents of new report
          ansible.builtin.set_fact:
            remote_report: "{{ remote_report_contents_raw.content | b64decode | from_yaml }}"

            # TODO: FIX: THIS.
        - name: Compare the two and write to a file
          ansible.builtin.copy:
            dest: /var/tmp/drift_report.yaml
            content: |
              files:
              {{ remote_report.files | difference(baseline_report.files) }}

              services:
              {{ remote_report.services | difference(baseline_report.services) }}

              installed_packages:
              {{ remote_report.installed_packages | difference(baseline_report.installed_packages) }}
            mode: '0755'

